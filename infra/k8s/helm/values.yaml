# Default values for decentralized-app chart

# Global Docker image parameters
imagePullSecrets: []

# Global security parameters
podSecurityContext:
  fsGroup: 10001
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault

securityContext:
  allowPrivilegeEscalation: false
  runAsNonRoot: true
  runAsUser: 10000
  runAsGroup: 10001
  capabilities:
    drop:
    - ALL
  seccompProfile:
    type: RuntimeDefault
  readOnlyRootFilesystem: true

# Service account configuration
serviceAccount:
  create: true
  annotations: {}
  name: "dex-app-sa"

# PostgreSQL configuration
postgresql:
  enabled: true
  image:
    repository: postgres
    tag: 15
  auth:
    username: dexuser
    password: dexpassword
    database: dex

# ClickHouse configuration
clickhouse:
  enabled: true
  image:
    repository: clickhouse/clickhouse-server
    tag: 23.3

# Redis configuration
redis:
  enabled: true
  image:
    repository: redis
    tag: 7-alpine

# NATS configuration
nats:
  enabled: true
  image:
    repository: nats
    tag: 2.9-alpine

# IPFS configuration
ipfs:
  enabled: true
  image:
    repository: ipfs/kubo
    tag: latest

# API service configuration
apiService:
  enabled: true
  replicaCount: 1
  image:
    repository: dex-api
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 3000
  env:
  - name: RUST_LOG
    value: info
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  volumeMounts:
  - name: tmp
    mountPath: /tmp
  volumes:
  - name: tmp
    emptyDir: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Indexer service configuration
indexerService:
  enabled: true
  replicaCount: 1
  image:
    repository: dex-indexer
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 9091
  env:
  - name: RUST_LOG
    value: info
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  volumeMounts:
  - name: tmp
    mountPath: /tmp
  volumes:
  - name: tmp
    emptyDir: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Keeper service configuration
keeperService:
  enabled: true
  replicaCount: 1
  image:
    repository: dex-keeper
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 9092
  env:
  - name: RUST_LOG
    value: info
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  volumeMounts:
  - name: tmp
    mountPath: /tmp
  volumes:
  - name: tmp
    emptyDir: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

# IPFS monitor service configuration
ipfsMonitorService:
  enabled: true
  replicaCount: 1
  image:
    repository: dex-ipfs-monitor
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 9093
  env:
  - name: RUST_LOG
    value: info
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  volumeMounts:
  - name: tmp
    mountPath: /tmp
  volumes:
  - name: tmp
    emptyDir: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

# MEV monitor service configuration
mevMonitorService:
  enabled: true
  replicaCount: 1
  image:
    repository: dex-mev-monitor
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 9094
  env:
  - name: RUST_LOG
    value: info
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  volumeMounts:
  - name: tmp
    mountPath: /tmp
  volumes:
  - name: tmp
    emptyDir: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

# AA Bundler service configuration
aaBundlerService:
  enabled: true
  replicaCount: 1
  image:
    repository: dex-aa-bundler
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 9095
  env:
  - name: RUST_LOG
    value: info
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  volumeMounts:
  - name: tmp
    mountPath: /tmp
  volumes:
  - name: tmp
    emptyDir: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Prometheus configuration
prometheus:
  enabled: true
  image:
    repository: prom/prometheus
    tag: latest

# Grafana configuration
grafana:
  enabled: true
  image:
    repository: grafana/grafana-enterprise
    tag: latest

# Ingress configuration
ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# Service monitor configuration
serviceMonitor:
  enabled: false
  additionalLabels: {}
  interval: 30s

# Resilience and Availability configuration
resilienceAvailability:
  enabled: true
  haFailover:
    multiAzEnabled: true
    healthCheckInterval: 30
    replicasPerService: 3
    failoverTimeoutMs: 10000
  trafficProtection:
    circuitBreakerThreshold: 5
    circuitBreakerTimeoutMs: 60000
    bulkheadConcurrencyLimit: 100
    rateShaping:
      maxRps: 1000
      burstSize: 200
      shedPercentage: 10
  gracefulDegradation:
    featureFlagsEnabled: true
    readOnlyModeEnabled: true
    cacheTtlSeconds: 300
    fallbackDataSources:
      - "redis_cache"
      - "local_cache"
  disasterRecovery:
    drPlaybookEnabled: true
    chaosTestingEnabled: true
    rpoSeconds: 300
    rtoSeconds: 600
    backupRetentionDays: 30
