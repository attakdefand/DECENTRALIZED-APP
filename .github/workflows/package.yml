name: Package

on:
  release:
    types: [created]

jobs:
  package:
    name: Create Packages
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Build for Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        cargo build --release --bin dex-cli
        tar -czf dex-linux-x86_64.tar.gz -C target/release dex-cli
        
    - name: Build for macOS
      if: matrix.os == 'macos-latest'
      run: |
        cargo build --release --bin dex-cli
        tar -czf dex-macos-x86_64.tar.gz -C target/release dex-cli
        
    - name: Build for Windows
      if: matrix.os == 'windows-latest'
      run: |
        cargo build --release --bin dex-cli
        Compress-Archive -Path "target\release\dex-cli.exe" -DestinationPath "dex-windows-x86_64.zip"
        
    - name: Upload Linux package
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./dex-linux-x86_64.tar.gz
        asset_name: dex-linux-x86_64.tar.gz
        asset_content_type: application/gzip
        
    - name: Upload macOS package
      if: matrix.os == 'macos-latest'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./dex-macos-x86_64.tar.gz
        asset_name: dex-macos-x86_64.tar.gz
        asset_content_type: application/gzip
        
    - name: Upload Windows package
      if: matrix.os == 'windows-latest'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./dex-windows-x86_64.zip
        asset_name: dex-windows-x86_64.zip
        asset_content_type: application/zip