name: Publish Packages

on:
  push:
    branches: [ main ]
  release:
    types: [ published ]

env:
  CARGO_TERM_COLOR: always

jobs:
  publish-crates:
    name: Publish Crates to GitHub Packages
    runs-on: ubuntu-latest
    # Only run this job if we're on the main repository (not a fork)
    if: github.repository == 'attakdefand/DECENTRALIZED-APP'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-publish-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Setup .cargo/config.toml
      run: |
        mkdir -p ~/.cargo
        echo '[registries.github]' > ~/.cargo/config.toml
        echo 'index = "https://github.com/attakdefand/DECENTRALIZED-APP"' >> ~/.cargo/config.toml
    
    - name: Publish crates to GitHub Packages
      run: |
        # Publish all crates in the workspace except the web-ui
        for manifest in $(find crates services -name "Cargo.toml" -not -path "*/target/*"); do
          echo "Publishing crate from $manifest"
          cargo publish --manifest-path $manifest --registry github --token ${{ secrets.GITHUB_TOKEN }} || echo "Failed to publish $manifest, continuing..."
        done
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-wasm:
    name: Publish WebAssembly Package
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: wasm32-unknown-unknown
        override: true
        
    - name: Install wasm-pack
      run: |
        curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
        
    - name: Build and Publish WebAssembly package
      run: |
        cd web-ui
        wasm-pack build --target web --release
        wasm-pack publish --registry github
      env:
        WASM_PACK_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      continue-on-error: true

  publish-docker:
    name: Publish Docker Images
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: |
          ghcr.io/${{ github.repository }}
        tags: |
          type=raw,value=latest
          type=sha,prefix=
    
    - name: Build and push indexer service
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./services/indexer-rs/Dockerfile
        push: true
        tags: |
          ghcr.io/${{ github.repository }}/indexer:latest
          ghcr.io/${{ github.repository }}/indexer:${{ github.sha }}
    
    - name: Build and push API service
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./services/api-rs/Dockerfile
        push: true
        tags: |
          ghcr.io/${{ github.repository }}/api:latest
          ghcr.io/${{ github.repository }}/api:${{ github.sha }}
    
    - name: Build and push keepers service
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./services/keepers-rs/Dockerfile
        push: true
        tags: |
          ghcr.io/${{ github.repository }}/keepers:latest
          ghcr.io/${{ github.repository }}/keepers:${{ github.sha }}
    
    - name: Build and push IPFS monitor service
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./services/ipfs-rs/Dockerfile
        push: true
        tags: |
          ghcr.io/${{ github.repository }}/ipfs-monitor:latest
          ghcr.io/${{ github.repository }}/ipfs-monitor:${{ github.sha }}
    
    - name: Build and push MEV monitor service
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./services/mev-monitor/Dockerfile
        push: true
        tags: |
          ghcr.io/${{ github.repository }}/mev-monitor:latest
          ghcr.io/${{ github.repository }}/mev-monitor:${{ github.sha }}
    
    - name: Build and push AA bundler service
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./services/aa-bundler/Dockerfile
        push: true
        tags: |
          ghcr.io/${{ github.repository }}/aa-bundler:latest
          ghcr.io/${{ github.repository }}/aa-bundler:${{ github.sha }}